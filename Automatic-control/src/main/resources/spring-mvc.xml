<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 解析com.zgy.springmvc.controller包下的注解 -->
    <context:component-scan base-package="com.automatic.AutomaticControl.*.controller"/>
    <!-- 启用注解 -->
    <context:annotation-config/>
    <!--
     1. :aspectj-autoproxy面向切面自动注入的一个方式
     2. proxy-target-class="true" 表示他不是实现接口的一个方式，如果改成false那么DictAspect这一个类必须要实现接口
     -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--
    会自动注册RequestMappingHandlerMapping、RequestMappingHandlerAdapter 与xceptionHandlerExceptionResolver 三个bean。
    如果没有<mvc:annotation-driven/>，那么所有的Controller可能就没有解析，所有当有请求时候都没有匹配的处理请求类，
    就都去<mvc:default-servlet-handler/>即default servlet处理了。添加上<mvc:annotation-driven/>后，相应的do请求被Controller处理，
    而静态资源因为没有相应的Controller就会被default servlet处理。总之没有相应的Controller就会被default servlet处理就ok了。
    -->
    <!-- 可代替下面处理映射器和处理器适配器 -->
     <mvc:annotation-driven>
        <!-- 解决REST风格返回数据乱码 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"></constructor-arg>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--文件上传配置-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 请求的编码格式, 必须和jsp的pageEncoding属性一致, 以便正确读取表单的内容, 默认为ISO-8859-1 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 上传文件大小上限, 单位为字节 (10485760 = 10M) -->
        <property name="maxUploadSize" value="10485760"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!-- 我们把上传的图片放在根目录下的upload文件夹下面 -->
     <!-- 这个是访问图片的配置 ， 也就是静态资源文件配置 -->
<!--     <mvc:resources mapping="/upload/**" location="/upload/"/>-->

    <!--<bean name="/items.do" class="com.xiefan.springmvc.controller.ItemsController"></bean>-->

    <!-- 配置处理映射器将bean的name作为url进行查找，需要在配置Handle时指定name（即url） -->
    <!--<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>-->

    <!-- 配置处理器适配器，所有处理适配器都要实现 HandlerAdapter接口-->
    <!--<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>-->

    <!-- 配置视图解析器 解析jsp视图，默认使用jstl标签 CLASSPATH下面要有jstl jar包 -->
    <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        前缀
        <property name="prefix" value="/WEB-INF/views/" />
        后缀
        <property name="suffix" value=".jsp" />
    </bean> -->
    <!--重要！将你的SwaggerConfig配置类注入-->
    <bean class="com.automatic.AutomaticControl.core.config.SwaggerConfig"/>
    <mvc:resources mapping="/swagger-ui/**" location="classpath:/META-INF/resources/webjars/springfox-swagger-ui/" />

    <!--开启过滤静态资源-->
    <mvc:default-servlet-handler/>

</beans>
